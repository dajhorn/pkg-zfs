/* zfs_config.h.in.  Generated from configure.ac by autoheader.  */

/* Atomic types use spinlocks */
#undef ATOMIC_SPINLOCK

/* Define to 1 to enable basic kmem accounting */
#undef DEBUG_KMEM

/* Define to 1 to enable detailed kmem tracking */
#undef DEBUG_KMEM_TRACKING

/* invalidate_bdev() wants 1 arg */
#undef HAVE_1ARG_INVALIDATE_BDEV

/* bio_end_io_t wants 2 args */
#undef HAVE_2ARGS_BIO_END_IO_T

/* invalidate_inodes() wants 2 args */
#undef HAVE_2ARGS_INVALIDATE_INODES

/* register_sysctl_table() wants 2 args */
#undef HAVE_2ARGS_REGISTER_SYSCTL

/* set_fs_pwd() wants 2 args */
#undef HAVE_2ARGS_SET_FS_PWD

/* vfs_fsync() wants 2 args */
#undef HAVE_2ARGS_VFS_FSYNC

/* vfs_unlink() wants 2 args */
#undef HAVE_2ARGS_VFS_UNLINK

/* zlib_deflate_workspacesize() wants 2 args */
#undef HAVE_2ARGS_ZLIB_DEFLATE_WORKSPACESIZE

/* INIT_WORK wants 3 args */
#undef HAVE_3ARGS_INIT_WORK

/* on_each_cpu wants 3 args */
#undef HAVE_3ARGS_ON_EACH_CPU

/* shrinker callback wants 3 args */
#undef HAVE_3ARGS_SHRINKER_CALLBACK

/* vfs_rename() wants 4 args */
#undef HAVE_4ARGS_VFS_RENAME

/* device_create wants 5 args */
#undef HAVE_5ARGS_DEVICE_CREATE

/* proc_handler() wants 5 args */
#undef HAVE_5ARGS_PROC_HANDLER

/* security_inode_init_security wants 6 args */
#undef HAVE_6ARGS_SECURITY_INODE_INIT_SECURITY

/* kernel defines atomic64_cmpxchg */
#undef HAVE_ATOMIC64_CMPXCHG

/* kernel defines atomic64_t */
#undef HAVE_ATOMIC64_T

/* kernel defines atomic64_xchg */
#undef HAVE_ATOMIC64_XCHG

/* struct block_device_operations use bdevs */
#undef HAVE_BDEV_BLOCK_DEVICE_OPERATIONS

/* bdev_logical_block_size() is available */
#undef HAVE_BDEV_LOGICAL_BLOCK_SIZE

/* struct super_block has s_bdi */
#undef HAVE_BDI

/* bdi_setup_and_register() is available */
#undef HAVE_BDI_SETUP_AND_REGISTER

/* bio_empy_barrier() is defined */
#undef HAVE_BIO_EMPTY_BARRIER

/* REQ_FAILFAST_MASK is defined */
#undef HAVE_BIO_REQ_FAILFAST_MASK

/* BIO_RW_FAILFAST is defined */
#undef HAVE_BIO_RW_FAILFAST

/* BIO_RW_FAILFAST_* are defined */
#undef HAVE_BIO_RW_FAILFAST_DTD

/* BIO_RW_SYNC is defined */
#undef HAVE_BIO_RW_SYNC

/* BIO_RW_SYNCIO is defined */
#undef HAVE_BIO_RW_SYNCIO

/* blkdev_get_by_path() is available */
#undef HAVE_BLKDEV_GET_BY_PATH

/* blk_end_request() is available */
#undef HAVE_BLK_END_REQUEST

/* blk_end_request() is GPL-only */
#undef HAVE_BLK_END_REQUEST_GPL_ONLY

/* blk_fetch_request() is available */
#undef HAVE_BLK_FETCH_REQUEST

/* blk_queue_flush() is available */
#undef HAVE_BLK_QUEUE_FLUSH

/* blk_queue_flush() is GPL-only */
#undef HAVE_BLK_QUEUE_FLUSH_GPL_ONLY

/* blk_queue_io_opt() is available */
#undef HAVE_BLK_QUEUE_IO_OPT

/* blk_queue_max_hw_sectors() is available */
#undef HAVE_BLK_QUEUE_MAX_HW_SECTORS

/* blk_queue_max_segments() is available */
#undef HAVE_BLK_QUEUE_MAX_SEGMENTS

/* blk_queue_nonrot() is available */
#undef HAVE_BLK_QUEUE_NONROT

/* blk_queue_physical_block_size() is available */
#undef HAVE_BLK_QUEUE_PHYSICAL_BLOCK_SIZE

/* blk_requeue_request() is available */
#undef HAVE_BLK_REQUEUE_REQUEST

/* blk_rq_bytes() is available */
#undef HAVE_BLK_RQ_BYTES

/* blk_rq_bytes() is GPL-only */
#undef HAVE_BLK_RQ_BYTES_GPL_ONLY

/* blk_rq_pos() is available */
#undef HAVE_BLK_RQ_POS

/* blk_rq_sectors() is available */
#undef HAVE_BLK_RQ_SECTORS

/* security_inode_init_security wants callback */
#undef HAVE_CALLBACK_SECURITY_INODE_INIT_SECURITY

/* check_disk_size_change() is available */
#undef HAVE_CHECK_DISK_SIZE_CHANGE

/* class_device_create() is available */
#undef HAVE_CLASS_DEVICE_CREATE

/* super_block uses const struct xattr_hander */
#undef HAVE_CONST_XATTR_HANDLER

/* struct cred exists */
#undef HAVE_CRED_STRUCT

/* struct ctl_table has ctl_name */
#undef HAVE_CTL_NAME

/* unnumbered sysctl support exists */
#undef HAVE_CTL_UNNUMBERED

/* xattr_handler->get() wants dentry */
#undef HAVE_DENTRY_XATTR_GET

/* xattr_handler->set() wants dentry */
#undef HAVE_DENTRY_XATTR_SET

/* device_create() is available */
#undef HAVE_DEVICE_CREATE

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* d_obtain_alias() is available */
#undef HAVE_D_OBTAIN_ALIAS

/* sops->evict_inode() exists */
#undef HAVE_EVICT_INODE

/* linux/fdtable.h exists */
#undef HAVE_FDTABLE_HEADER

/* files_fdtable() is available */
#undef HAVE_FILES_FDTABLE

/* first_online_pgdat() is available */
#undef HAVE_FIRST_ONLINE_PGDAT

/* fls64() is available */
#undef HAVE_FLS64

/* kernel defines fmode_t */
#undef HAVE_FMODE_T

/* sops->free_cached_objects() exists */
#undef HAVE_FREE_CACHED_OBJECTS

/* fops->fsync() with range */
#undef HAVE_FSYNC_RANGE

/* fops->fsync() without dentry */
#undef HAVE_FSYNC_WITHOUT_DENTRY

/* fops->fsync() with dentry */
#undef HAVE_FSYNC_WITH_DENTRY

/* struct fs_struct uses spinlock_t */
#undef HAVE_FS_STRUCT_SPINLOCK

/* blk_disk_ro() is available */
#undef HAVE_GET_DISK_RO

/* get_vmalloc_info() is available */
#undef HAVE_GET_VMALLOC_INFO

/* get_zone_counts() is available */
#undef HAVE_GET_ZONE_COUNTS

/* global_page_state() is available */
#undef HAVE_GLOBAL_PAGE_STATE

/* Define to 1 if licensed under the GPL */
#undef HAVE_GPL_ONLY_SYMBOLS

/* groups_search() is available */
#undef HAVE_GROUPS_SEARCH

/* init_utsname() is available */
#undef HAVE_INIT_UTSNAME

/* struct inode has i_mutex */
#undef HAVE_INODE_I_MUTEX

/* insert_inode_locked() is available */
#undef HAVE_INSERT_INODE_LOCKED

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* invalidate_inodes() is available */
#undef HAVE_INVALIDATE_INODES

/* invalidate_inodes_check() is available */
#undef HAVE_INVALIDATE_INODES_CHECK

/* result=stropts.h Define to 1 if ioctl() defined in <stropts.h> */
#undef HAVE_IOCTL_IN_STROPTS_H

/* Define to 1 if ioctl() defined in <sys/ioctl.h> */
#undef HAVE_IOCTL_IN_SYS_IOCTL_H

/* Define to 1 if ioctl() defined in <unistd.h> */
#undef HAVE_IOCTL_IN_UNISTD_H

/* kallsyms_lookup_name() is available */
#undef HAVE_KALLSYMS_LOOKUP_NAME

/* kern_path_parent() is available */
#undef HAVE_KERN_PATH_PARENT_HEADER

/* kern_path_parent() is available */
#undef HAVE_KERN_PATH_PARENT_SYMBOL

/* kmalloc_node() is available */
#undef HAVE_KMALLOC_NODE

/* kernel defines KOBJ_NAME_LEN */
#undef HAVE_KOBJ_NAME_LEN

/* kvasprintf() is available */
#undef HAVE_KVASPRINTF

/* Define if you have libblkid */
#undef HAVE_LIBBLKID

/* Define if you have selinux */
#undef HAVE_LIBSELINUX

/* Define if you have libuuid */
#undef HAVE_LIBUUID

/* Define to 1 if you have the `z' library (-lz). */
#undef HAVE_LIBZ

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* monotonic_clock() is available */
#undef HAVE_MONOTONIC_CLOCK

/* mount_nodev() is available */
#undef HAVE_MOUNT_NODEV

<<<<<<< HEAD
/* mutex_lock_nested() is available */
#undef HAVE_MUTEX_LOCK_NESTED

/* struct mutex has owner */
#undef HAVE_MUTEX_OWNER

/* struct mutex owner is a task_struct */
#undef HAVE_MUTEX_OWNER_TASK_STRUCT

/* next_online_pgdat() is available */
#undef HAVE_NEXT_ONLINE_PGDAT

/* next_zone() is available */
#undef HAVE_NEXT_ZONE
=======
/* sops->nr_cached_objects() exists */
#undef HAVE_NR_CACHED_OBJECTS
>>>>>>> upstream

/* open_bdev_exclusive() is available */
#undef HAVE_OPEN_BDEV_EXCLUSIVE

/* struct path used in struct nameidata */
#undef HAVE_PATH_IN_NAMEIDATA

/* pgdat helpers are available */
#undef HAVE_PGDAT_HELPERS

/* pgdat_list is available */
#undef HAVE_PGDAT_LIST

/* __put_task_struct() is available */
#undef HAVE_PUT_TASK_STRUCT

/* REQ_SYNC is defined */
#undef HAVE_REQ_SYNC

/* rq_for_each_segment() is available */
#undef HAVE_RQ_FOR_EACH_SEGMENT

/* rq_is_sync() is available */
#undef HAVE_RQ_IS_SYNC

/* set_fs_pwd() is available */
#undef HAVE_SET_FS_PWD

/* set_nlink() is available */
#undef HAVE_SET_NLINK

<<<<<<< HEAD
/* set_normalized_timespec() is available as export */
#undef HAVE_SET_NORMALIZED_TIMESPEC_EXPORT

/* set_normalized_timespec() is available as inline */
#undef HAVE_SET_NORMALIZED_TIMESPEC_INLINE

/* set_shrinker() available */
#undef HAVE_SET_SHRINKER

/* struct shrink_control exists */
#undef HAVE_SHRINK_CONTROL_STRUCT

/* shrink_dcache_memory() is available */
#undef HAVE_SHRINK_DCACHE_MEMORY

/* shrink_icache_memory() is available */
#undef HAVE_SHRINK_ICACHE_MEMORY
=======
/* sops->show_options() with dentry */
#undef HAVE_SHOW_OPTIONS_WITH_DENTRY

/* struct super_block has s_shrink */
#undef HAVE_SHRINK
>>>>>>> upstream

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* task_curr() exported */
#undef HAVE_TASK_CURR

/* timespec_sub() is available */
#undef HAVE_TIMESPEC_SUB

/* truncate_setsize() is available */
#undef HAVE_TRUNCATE_SETSIZE

/* linux/uaccess.h exists */
#undef HAVE_UACCESS_HEADER

/* kernel defines uintptr_t */
#undef HAVE_UINTPTR_T

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* user_path_dir() is available */
#undef HAVE_USER_PATH_DIR

/* vfs_fsync() is available */
#undef HAVE_VFS_FSYNC

/* Define if you have zlib */
#undef HAVE_ZLIB

/* Page state NR_ACTIVE is available */
#undef HAVE_ZONE_STAT_ITEM_NR_ACTIVE

/* Page state NR_ACTIVE_ANON is available */
#undef HAVE_ZONE_STAT_ITEM_NR_ACTIVE_ANON

/* Page state NR_ACTIVE_FILE is available */
#undef HAVE_ZONE_STAT_ITEM_NR_ACTIVE_FILE

/* Page state NR_FREE_PAGES is available */
#undef HAVE_ZONE_STAT_ITEM_NR_FREE_PAGES

/* Page state NR_INACTIVE is available */
#undef HAVE_ZONE_STAT_ITEM_NR_INACTIVE

/* Page state NR_INACTIVE_ANON is available */
#undef HAVE_ZONE_STAT_ITEM_NR_INACTIVE_ANON

/* Page state NR_INACTIVE_FILE is available */
#undef HAVE_ZONE_STAT_ITEM_NR_INACTIVE_FILE

/* Define to the sub-directory in which libtool stores uninstalled libraries.
   */
#undef LT_OBJDIR

/* get_zone_counts() is needed */
#undef NEED_GET_ZONE_COUNTS

/* Define to 1 if NPTL threading implementation includes guard area in stack
   allocation */
#undef NPTL_GUARD_WITHIN_STACK

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* rwsem_is_locked() acquires sem->wait_lock */
#undef RWSEM_IS_LOCKED_TAKES_WAIT_LOCK

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Version number of package */
#undef VERSION

/* Define the project alias string. */
#undef ZFS_META_ALIAS

/* Define the project author. */
#undef ZFS_META_AUTHOR

/* Define the project release date. */
#undef ZFS_META_DATA

/* Define the project license. */
#undef ZFS_META_LICENSE

/* Define the libtool library 'age' version information. */
#undef ZFS_META_LT_AGE

/* Define the libtool library 'current' version information. */
#undef ZFS_META_LT_CURRENT

/* Define the libtool library 'revision' version information. */
#undef ZFS_META_LT_REVISION

/* Define the project name. */
#undef ZFS_META_NAME

/* Define the project release. */
#undef ZFS_META_RELEASE

/* Define the project version. */
#undef ZFS_META_VERSION


#undef PACKAGE
#undef PACKAGE_BUGREPORT
#undef PACKAGE_NAME
#undef PACKAGE_STRING
#undef PACKAGE_TARNAME
#undef PACKAGE_VERSION
#undef STDC_HEADERS
#undef VERSION
